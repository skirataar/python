#1(a)
m1=int(input("Enter the test1 Marks"))
m2=int(input("Enter the test2 Marks"))
m3=int(input("Enter the test3 Marks"))
Minimum=min(m1,m2,m3)
sum=m1+m2+m3-Minimum
Avg=sum/2
print("Average of best two test marks  out of three test’s marks is ",Avg)

#(b)
num=input("Enter the Number")
rev=num
if (rev==rev[::-1]):
   print("The Number is Palindrome", num)
else:
   print("The Number  is not Palindrome", num)
for i in set(num):
     print(i, "appears", num.count(str(i)),"times")

#2(a)
def Fibonacci(n):
   if n==1:
       return 0
   elif n==2:
       return 1
   else:
       return (Fibonacci(n-1)+Fibonacci(n-2))
   
 
num=int(input("Enter the number\n"))
if num>0:
   res=Fibonacci(num)
   print("Fibonacci of ", num ,"is",res)
else:
   print("Error in the input")

#(b)
def Bin2dec(bin):
   l=len(bin)
   dec=0
   for i in range(l):
       dec+=int(bin[i])*((2**(l-i-1))
   return dec
 
 
def oct2hex(oct):
   l=len(oct)
   dec=0
   for i in range(l):
       dec+=int(oct[i])*(8**(l-i-1))
   hexa=['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F']
   octhex=' '
   while dec>0:
       rem=dec%16
       octhex=hexa[rem]+octhex
       dec=dec//16
   return octhex
       
bin=input("Enter the Binary Number")
print(“Binary to Decimal is “,Bin2dec(bin))
oct=input("Enter the octal Number")
print(“Octal to Decimal is “,oct2hex(oct))

#3(a)
sentence = input("Enter a sentence : ")
digCnt = upCnt = loCnt =wordcnt=0
wordcont=sentence.split()
for ch in sentence:
   if ch>='0' and ch<='9':
      digCnt += 1
   if ch>='A'and ch<='Z':
      upCnt += 1
   if ch>='a' and ch<='z':
      loCnt += 1
 
print("This sentence has\n")
print("words: ", len(wordcont),"\n" "digits",digCnt, )
print("upper case letters",upCnt, "\n" "lower case letters ",loCnt)

#(b)
def compare(s,p):
   count=0
   n=min(len(s),len(p))
   for i in range(n):
       if s[i]==p[i]:
           count+=1
   return count
s1 = input("Enter String 1 \n")
s2 = input("Enter String 2 \n")
mx=max(len(s1),len(s2))
count=compare(s1,s2)
similarity=count/mx*100
print ("Total number letter matched is",count)
print("simirality between two string is",similarity)

#4(a)
def insertion_sort(arr,n):
   for i in range(1,n):
       key = arr[i]
       j = i-1
       while j>=0 and key < arr[j]:
           arr[j+1] = arr[j]
           j -=1
       arr[j+1] = key
   return arr
 
def merge_sort(arr):
   n = len(arr)
   if(n>1):
       mid = n//2
       L = arr[:mid]
       R = arr[mid:]
       merge_sort(L)
       merge_sort(R)
       
       i = j = k = 0
       while i<len(L) and j<len(R):
           if L[i]<=R[j]:
               arr[k] = L[i]
               i+=1
           else:
               arr[k] = R[j]
               j+=1
           k+=1
       while(i<len(L)):
           arr[k] = L[i]
           k+=1
           i+=1
       while(j<len(R)):
           arr[k] = R[j]
           k+=1
           j+=1
 
n = int(input("Enter the size of array"))
arr = [None]*n
print("Enter the elements")
for i in range(n):
   arr[i] = int(input())
print("Before Sorting : ",arr)
merge_sort(arr)
print("After Merge Sort : ",arr)
insertion_sort(arr,n)
print("After Insertion sort : ",arr)

#(b)
def roman2integer(roman_numeral):
   roman_dict={'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}
 
   res=0
   pre_val=0
   for symbol in roman_numeral[::-1]:
        value=roman_dict[symbol]
        if(value>=pre_val):
              res=res+value
        else:
              res=res-value
        pre_val=value
   return res
 
roman_numeral=input("Enter a Roman numeral:")
integer_value=roman2integer(roman_numeral)
print("Integer value:", integer_value)

#5(a)
def isphoneNo(num):
   if(len(num)==12
      and num[0:3].isdigit()
      and num[4:7].isdigit()
      and num[9:12].isdigit()
      and num[3]=='-'and num[7]=='-'):
       print("Valid Phone Number")
   else:
       print("Invalid Phone Number")
 
def checkphoneNo(num):
   pattern=('\d{3}-\d{3}-\d{4}')
   result=re.match(pattern,num)
   if result:
       print("Valid Phone Number")
   else:
       print("Invalid Phone Number")
 
 
n=input("Enter Number\n")
print("Without Using Regular Expression")
isphoneNo(n)
print("Using Regular Expression")
res1=checkphoneNo(n)

#(b)

import re
phone_pat=re.compile(r'\+\d{12}$')
email_pat=re.compile(r'[0-9a-zA-Z._]+@gmail.com')
f=open("C://Users//deepa//OneDrive//Desktop//ex.txt",'r')
for line in f:
       matches=phone_pat.findall(line)
       for match in matches:
           print(match)
       matches=email_pat.findall(line)
       for match in matches:
           print(match)

